{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["var $09e991522ca7e64e$exports = {};\n\"use strict\";\nconst $09e991522ca7e64e$var$COLUMN_LENGTH = 4;\nconst $09e991522ca7e64e$var$winValue = 2048;\nconst $09e991522ca7e64e$var$gameField = document.querySelector(\".game-field\").tBodies[0];\nconst $09e991522ca7e64e$var$rows = [\n    ...$09e991522ca7e64e$var$gameField.children\n];\nconst $09e991522ca7e64e$var$cells = [\n    ...$09e991522ca7e64e$var$gameField.querySelectorAll(\".field-cell\")\n];\nconst $09e991522ca7e64e$var$scoreBlock = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$bestBlock = document.querySelector(\".game-best\");\nconst $09e991522ca7e64e$var$tiles = [];\nlet $09e991522ca7e64e$var$wasAnyCellReplaced = false;\nlet $09e991522ca7e64e$var$score = 0;\nlet $09e991522ca7e64e$var$best = localStorage.getItem(\"best\") || 0;\nlet $09e991522ca7e64e$var$xTouchStartPoint = null;\nlet $09e991522ca7e64e$var$yToucStartPoint = null;\nlet $09e991522ca7e64e$var$lastY = 1;\nfunction $09e991522ca7e64e$var$isPossibleToMove() {\n    if ($09e991522ca7e64e$var$getEmptyCells().length > 0) return true;\n    for(let i = 0; i < $09e991522ca7e64e$var$rows.length; i++)for(let k = 0; k < $09e991522ca7e64e$var$rows.length; k++){\n        const currentCellValue = $09e991522ca7e64e$var$rows[i].children[k].dataset.num;\n        if (k !== $09e991522ca7e64e$var$rows.length - 1) {\n            const rightCellValue = $09e991522ca7e64e$var$rows[i].children[k + 1].dataset.num;\n            if (currentCellValue === rightCellValue) return true;\n        }\n        if (i !== $09e991522ca7e64e$var$rows.length - 1) {\n            const bottomCellValue = $09e991522ca7e64e$var$rows[i + 1].children[k].dataset.num;\n            if (currentCellValue === bottomCellValue) return true;\n        }\n    }\n    return false;\n}\nfunction $09e991522ca7e64e$var$getCellsByRows() {\n    return $09e991522ca7e64e$var$rows.map((row)=>[\n            ...row.children\n        ]);\n}\nfunction $09e991522ca7e64e$var$getCellsByRowsReversed() {\n    return $09e991522ca7e64e$var$getCellsByRows().map((row)=>row.reverse());\n}\nfunction $09e991522ca7e64e$var$getCellsByColumns() {\n    const columns = [];\n    for(let i = 0; i < $09e991522ca7e64e$var$COLUMN_LENGTH; i++){\n        const column = [];\n        for(let k = 0; k < $09e991522ca7e64e$var$rows.length; k++)column.push($09e991522ca7e64e$var$rows[k].children[i]);\n        columns.push(column);\n    }\n    return columns;\n}\nfunction $09e991522ca7e64e$var$getCellsByReversedColumns() {\n    const columns = [];\n    for(let i = 0; i < $09e991522ca7e64e$var$COLUMN_LENGTH; i++){\n        const column = [];\n        for(let k = 0; k < $09e991522ca7e64e$var$rows.length; k++)column.push($09e991522ca7e64e$var$rows[$09e991522ca7e64e$var$rows.length - k - 1].children[i]);\n        columns.push(column);\n    }\n    return columns;\n}\nfunction $09e991522ca7e64e$var$createTile(cell) {\n    const tile = document.createElement(\"div\");\n    tile.classList.add(\"tile\");\n    tile.style.top = cell.offsetTop + \"px\";\n    tile.style.left = cell.offsetLeft + \"px\";\n    $09e991522ca7e64e$var$gameField.append(tile);\n    return tile;\n}\nfunction $09e991522ca7e64e$var$initTilesAndCells() {\n    for(let i = 0; i < $09e991522ca7e64e$var$cells.length; i++)$09e991522ca7e64e$var$tiles.push($09e991522ca7e64e$var$createTile($09e991522ca7e64e$var$cells[i]));\n    for(let i = 0; i < $09e991522ca7e64e$var$cells.length; i++){\n        $09e991522ca7e64e$var$cells[i].dataset.id = i;\n        $09e991522ca7e64e$var$cells[i].dataset.num = 0;\n    }\n}\nfunction $09e991522ca7e64e$var$getEmptyCells() {\n    return $09e991522ca7e64e$var$cells.filter((cell)=>cell.dataset.num === \"0\");\n}\nfunction $09e991522ca7e64e$var$getRandomEmptyCell() {\n    const emptyCells = $09e991522ca7e64e$var$getEmptyCells();\n    const emptyCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    return emptyCell;\n}\nfunction $09e991522ca7e64e$var$makeNewCell() {\n    const emptyCell = $09e991522ca7e64e$var$getRandomEmptyCell();\n    const id = emptyCell.dataset.id;\n    emptyCell.dataset.num = Math.random() >= 0.9 ? 4 : 2;\n    $09e991522ca7e64e$var$tiles[id].textContent = emptyCell.dataset.num;\n    $09e991522ca7e64e$var$tiles[id].classList.add(`tile--${emptyCell.dataset.num}`);\n    $09e991522ca7e64e$var$tiles[id].classList.add(\"anim-show\");\n    setTimeout(()=>$09e991522ca7e64e$var$tiles[id].classList.remove(\"anim-show\"), 500);\n}\nfunction $09e991522ca7e64e$var$replaceEmptyCells(arrOfCells) {\n    let isSorted = false;\n    do {\n        isSorted = true;\n        for(let k = 0; k < arrOfCells.length; k++){\n            if (k === arrOfCells.length - 1) break;\n            if (arrOfCells[k].dataset.num !== \"0\" && arrOfCells[k + 1].dataset.num === \"0\") {\n                arrOfCells[k + 1].dataset.num = arrOfCells[k].dataset.num;\n                arrOfCells[k].dataset.num = 0;\n                [arrOfCells[k + 1].dataset.id, arrOfCells[k].dataset.id] = [\n                    arrOfCells[k].dataset.id,\n                    arrOfCells[k + 1].dataset.id\n                ];\n                $09e991522ca7e64e$var$wasAnyCellReplaced = true;\n                isSorted = false;\n            }\n        }\n    }while (!isSorted);\n}\nfunction $09e991522ca7e64e$var$slide(groupedCells) {\n    for(let i = 0; i < groupedCells.length; i++){\n        const cellsGroup = groupedCells[i];\n        $09e991522ca7e64e$var$replaceEmptyCells(cellsGroup);\n        for(let k = 2; k >= 0; k--){\n            if (k === cellsGroup.length - 1) break;\n            if (cellsGroup[k].dataset.num === cellsGroup[k + 1].dataset.num && cellsGroup[k].dataset.num !== \"0\") {\n                const cellToRemove = cellsGroup[k];\n                const cellToDouble = cellsGroup[k + 1];\n                const tileToRemove = $09e991522ca7e64e$var$tiles[cellToRemove.dataset.id];\n                const tileToDouble = $09e991522ca7e64e$var$tiles[cellToDouble.dataset.id];\n                const newNumber = cellToDouble.dataset.num * 2;\n                tileToRemove.classList.remove(`tile--${cellToRemove.dataset.num}`);\n                tileToRemove.textContent = \"\";\n                cellToRemove.dataset.num = 0;\n                tileToDouble.classList.remove(`tile--${cellToDouble.dataset.num}`);\n                cellToDouble.dataset.num = newNumber;\n                tileToDouble.textContent = newNumber;\n                tileToDouble.classList.add(`tile--${newNumber}`);\n                tileToDouble.classList.add(`anim-merge`);\n                setTimeout(()=>tileToDouble.classList.remove(`anim-merge`), 500);\n                $09e991522ca7e64e$var$wasAnyCellReplaced = true;\n                $09e991522ca7e64e$var$score += newNumber;\n                if (newNumber === $09e991522ca7e64e$var$winValue) document.querySelector(\".message-win\").classList.remove(\"hidden\");\n                $09e991522ca7e64e$var$replaceEmptyCells(cellsGroup);\n            }\n        }\n    }\n    $09e991522ca7e64e$var$cells.forEach((cell)=>{\n        $09e991522ca7e64e$var$tiles[cell.dataset.id].style.top = cell.offsetTop + \"px\";\n        $09e991522ca7e64e$var$tiles[cell.dataset.id].style.left = cell.offsetLeft + \"px\";\n    });\n}\nfunction $09e991522ca7e64e$var$slideUp() {\n    const cellsArr = $09e991522ca7e64e$var$getCellsByReversedColumns();\n    $09e991522ca7e64e$var$slide(cellsArr);\n    if ($09e991522ca7e64e$var$wasAnyCellReplaced) {\n        $09e991522ca7e64e$var$makeNewCell();\n        $09e991522ca7e64e$var$wasAnyCellReplaced = false;\n    }\n}\nfunction $09e991522ca7e64e$var$slideDown() {\n    const cellsArr = $09e991522ca7e64e$var$getCellsByColumns();\n    $09e991522ca7e64e$var$slide(cellsArr);\n    if ($09e991522ca7e64e$var$wasAnyCellReplaced) {\n        $09e991522ca7e64e$var$makeNewCell();\n        $09e991522ca7e64e$var$wasAnyCellReplaced = false;\n    }\n}\nfunction $09e991522ca7e64e$var$slideRight() {\n    const cellsArr = $09e991522ca7e64e$var$getCellsByRows();\n    $09e991522ca7e64e$var$slide(cellsArr);\n    if ($09e991522ca7e64e$var$wasAnyCellReplaced) {\n        $09e991522ca7e64e$var$makeNewCell();\n        $09e991522ca7e64e$var$wasAnyCellReplaced = false;\n    }\n}\nfunction $09e991522ca7e64e$var$slideLeft() {\n    const cellsArr = $09e991522ca7e64e$var$getCellsByRowsReversed();\n    $09e991522ca7e64e$var$slide(cellsArr);\n    if ($09e991522ca7e64e$var$wasAnyCellReplaced) {\n        $09e991522ca7e64e$var$makeNewCell();\n        $09e991522ca7e64e$var$wasAnyCellReplaced = false;\n    }\n}\nfunction $09e991522ca7e64e$var$endMove() {\n    if ($09e991522ca7e64e$var$score > $09e991522ca7e64e$var$best) {\n        localStorage.setItem(\"best\", $09e991522ca7e64e$var$score);\n        $09e991522ca7e64e$var$best = $09e991522ca7e64e$var$score;\n    }\n    $09e991522ca7e64e$var$scoreBlock.textContent = $09e991522ca7e64e$var$score;\n    $09e991522ca7e64e$var$bestBlock.textContent = $09e991522ca7e64e$var$best;\n    if (!$09e991522ca7e64e$var$isPossibleToMove()) document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$handleButtonClick(e) {\n    e.target.textContent = \"Restart\";\n    e.target.classList.remove(\"start\");\n    e.target.classList.add(\"restart\");\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n    document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    document.querySelector(\".message-win\").classList.add(\"hidden\");\n    $09e991522ca7e64e$var$cells.forEach((cell)=>{\n        $09e991522ca7e64e$var$tiles[cell.dataset.id].textContent = \"\";\n        $09e991522ca7e64e$var$tiles[cell.dataset.id].classList.remove(`tile--${cell.dataset.num}`);\n        cell.dataset.num = 0;\n    });\n    $09e991522ca7e64e$var$score = 0;\n    document.querySelector(\".game-score\").textContent = 0;\n    $09e991522ca7e64e$var$makeNewCell();\n    $09e991522ca7e64e$var$makeNewCell();\n}\nfunction $09e991522ca7e64e$var$handleInput(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$slideUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$slideDown();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$slideRight();\n            break;\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$slideLeft();\n            break;\n    }\n    $09e991522ca7e64e$var$endMove();\n}\nfunction $09e991522ca7e64e$var$handleTouchStart(e) {\n    const firstTouch = e.touches[0];\n    $09e991522ca7e64e$var$xTouchStartPoint = firstTouch.clientX;\n    $09e991522ca7e64e$var$yToucStartPoint = firstTouch.clientY;\n}\nfunction $09e991522ca7e64e$var$handleTouchMove(e) {\n    if (!$09e991522ca7e64e$var$xTouchStartPoint || !$09e991522ca7e64e$var$yToucStartPoint) return;\n    const xTouchEndPoint = e.touches[0].clientX;\n    const yTouchEndPoint = e.touches[0].clientY;\n    const xDiff = xTouchEndPoint - $09e991522ca7e64e$var$xTouchStartPoint;\n    const yDiff = yTouchEndPoint - $09e991522ca7e64e$var$yToucStartPoint;\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\n        if (xDiff > 0) $09e991522ca7e64e$var$slideRight();\n        else $09e991522ca7e64e$var$slideLeft();\n    } else if (yDiff > 0) $09e991522ca7e64e$var$slideDown();\n    else $09e991522ca7e64e$var$slideUp();\n    $09e991522ca7e64e$var$xTouchStartPoint = null;\n    $09e991522ca7e64e$var$yToucStartPoint = null;\n    $09e991522ca7e64e$var$endMove();\n}\nfunction $09e991522ca7e64e$var$disableScrollReload(e) {\n    const lastS = document.documentElement.scrollTop;\n    if (lastS === 0 && $09e991522ca7e64e$var$lastY - e.touches[0].clientY < 0 && e.cancelable) {\n        e.preDefault();\n        e.stopPropagation();\n    }\n    $09e991522ca7e64e$var$lastY = e.touches[0].clientY;\n}\n$09e991522ca7e64e$var$bestBlock.textContent = $09e991522ca7e64e$var$best;\n$09e991522ca7e64e$var$initTilesAndCells();\ndocument.querySelector(\".button\").addEventListener(\"click\", $09e991522ca7e64e$var$handleButtonClick);\ndocument.addEventListener(\"keyup\", $09e991522ca7e64e$var$handleInput);\n$09e991522ca7e64e$var$gameField.addEventListener(\"touchstart\", $09e991522ca7e64e$var$handleTouchStart, false);\n$09e991522ca7e64e$var$gameField.addEventListener(\"touchmove\", $09e991522ca7e64e$var$handleTouchMove, false);\ndocument.addEventListener(\"touchmove\", $09e991522ca7e64e$var$disableScrollReload, {\n    passive: false\n});\n\n\n//# sourceMappingURL=index.b49c419e.js.map\n","'use strict';\n\nconst COLUMN_LENGTH = 4;\nconst winValue = 2048;\nconst gameField = document.querySelector('.game-field').tBodies[0];\nconst rows = [...gameField.children];\nconst cells = [...gameField.querySelectorAll('.field-cell')];\nconst scoreBlock = document.querySelector('.game-score');\nconst bestBlock = document.querySelector('.game-best');\nconst tiles = [];\n\nlet wasAnyCellReplaced = false;\nlet score = 0;\nlet best = localStorage.getItem('best') || 0;\n\nlet xTouchStartPoint = null;\nlet yToucStartPoint = null;\nlet lastY = 1;\n\nfunction isPossibleToMove() {\n  if (getEmptyCells().length > 0) {\n    return true;\n  }\n\n  for (let i = 0; i < rows.length; i++) {\n    for (let k = 0; k < rows.length; k++) {\n      const currentCellValue = rows[i].children[k].dataset.num;\n\n      if (k !== rows.length - 1) {\n        const rightCellValue = rows[i].children[k + 1].dataset.num;\n\n        if (currentCellValue === rightCellValue) {\n          return true;\n        }\n      }\n\n      if (i !== rows.length - 1) {\n        const bottomCellValue = rows[i + 1].children[k].dataset.num;\n\n        if (currentCellValue === bottomCellValue) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction getCellsByRows() {\n  return rows.map(row => [...row.children]);\n}\n\nfunction getCellsByRowsReversed() {\n  return getCellsByRows().map(row => row.reverse());\n}\n\nfunction getCellsByColumns() {\n  const columns = [];\n\n  for (let i = 0; i < COLUMN_LENGTH; i++) {\n    const column = [];\n\n    for (let k = 0; k < rows.length; k++) {\n      column.push(rows[k].children[i]);\n    }\n\n    columns.push(column);\n  }\n\n  return columns;\n}\n\nfunction getCellsByReversedColumns() {\n  const columns = [];\n\n  for (let i = 0; i < COLUMN_LENGTH; i++) {\n    const column = [];\n\n    for (let k = 0; k < rows.length; k++) {\n      column.push(rows[rows.length - k - 1].children[i]);\n    }\n\n    columns.push(column);\n  }\n\n  return columns;\n}\n\nfunction createTile(cell) {\n  const tile = document.createElement('div');\n\n  tile.classList.add('tile');\n  tile.style.top = cell.offsetTop + 'px';\n  tile.style.left = cell.offsetLeft + 'px';\n  gameField.append(tile);\n\n  return tile;\n}\n\nfunction initTilesAndCells() {\n  for (let i = 0; i < cells.length; i++) {\n    tiles.push(createTile(cells[i]));\n  }\n\n  for (let i = 0; i < cells.length; i++) {\n    cells[i].dataset.id = i;\n    cells[i].dataset.num = 0;\n  }\n}\n\nfunction getEmptyCells() {\n  return cells.filter(cell => cell.dataset.num === '0');\n}\n\nfunction getRandomEmptyCell() {\n  const emptyCells = getEmptyCells();\n  const emptyCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n  return emptyCell;\n}\n\nfunction makeNewCell() {\n  const emptyCell = getRandomEmptyCell();\n  const id = emptyCell.dataset.id;\n\n  emptyCell.dataset.num = Math.random() >= 0.9 ? 4 : 2;\n  tiles[id].textContent = emptyCell.dataset.num;\n  tiles[id].classList.add(`tile--${emptyCell.dataset.num}`);\n  tiles[id].classList.add('anim-show');\n\n  setTimeout(() => tiles[id].classList.remove('anim-show'), 500);\n}\n\nfunction replaceEmptyCells(arrOfCells) {\n  let isSorted = false;\n\n  do {\n    isSorted = true;\n\n    for (let k = 0; k < arrOfCells.length; k++) {\n      if (k === arrOfCells.length - 1) {\n        break;\n      }\n\n      if (arrOfCells[k].dataset.num !== '0'\n           && arrOfCells[k + 1].dataset.num === '0') {\n        arrOfCells[k + 1].dataset.num = arrOfCells[k].dataset.num;\n        arrOfCells[k].dataset.num = 0;\n\n        [arrOfCells[k + 1].dataset.id, arrOfCells[k].dataset.id]\n           = [arrOfCells[k].dataset.id, arrOfCells[k + 1].dataset.id];\n\n        wasAnyCellReplaced = true;\n\n        isSorted = false;\n      }\n    }\n  } while (!isSorted);\n}\n\nfunction slide(groupedCells) {\n  for (let i = 0; i < groupedCells.length; i++) {\n    const cellsGroup = groupedCells[i];\n\n    replaceEmptyCells(cellsGroup);\n\n    for (let k = 2; k >= 0; k--) {\n      if (k === cellsGroup.length - 1) {\n        break;\n      }\n\n      if (cellsGroup[k].dataset.num === cellsGroup[k + 1].dataset.num\n        && cellsGroup[k].dataset.num !== '0') {\n        const cellToRemove = cellsGroup[k];\n        const cellToDouble = cellsGroup[k + 1];\n        const tileToRemove = tiles[cellToRemove.dataset.id];\n        const tileToDouble = tiles[cellToDouble.dataset.id];\n        const newNumber = cellToDouble.dataset.num * 2;\n\n        tileToRemove.classList\n          .remove(`tile--${cellToRemove.dataset.num}`);\n        tileToRemove.textContent = '';\n        cellToRemove.dataset.num = 0;\n\n        tileToDouble.classList\n          .remove(`tile--${cellToDouble.dataset.num}`);\n        cellToDouble.dataset.num = newNumber;\n        tileToDouble.textContent = newNumber;\n        tileToDouble.classList.add(`tile--${newNumber}`);\n        tileToDouble.classList.add(`anim-merge`);\n\n        setTimeout(() => tileToDouble.classList.remove(`anim-merge`), 500);\n\n        wasAnyCellReplaced = true;\n        score += newNumber;\n\n        if (newNumber === winValue) {\n          document.querySelector('.message-win').classList.remove('hidden');\n        }\n\n        replaceEmptyCells(cellsGroup);\n      }\n    }\n  }\n\n  cells.forEach(cell => {\n    tiles[cell.dataset.id].style.top = cell.offsetTop + 'px';\n    tiles[cell.dataset.id].style.left = cell.offsetLeft + 'px';\n  });\n}\n\nfunction slideUp() {\n  const cellsArr = getCellsByReversedColumns();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction slideDown() {\n  const cellsArr = getCellsByColumns();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction slideRight() {\n  const cellsArr = getCellsByRows();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction slideLeft() {\n  const cellsArr = getCellsByRowsReversed();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction endMove() {\n  if (score > best) {\n    localStorage.setItem('best', score);\n    best = score;\n  }\n\n  scoreBlock.textContent = score;\n  bestBlock.textContent = best;\n\n  if (!isPossibleToMove()) {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction handleButtonClick(e) {\n  e.target.textContent = 'Restart';\n  e.target.classList.remove('start');\n  e.target.classList.add('restart');\n\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n\n  cells.forEach(cell => {\n    tiles[cell.dataset.id].textContent = '';\n    tiles[cell.dataset.id].classList.remove(`tile--${cell.dataset.num}`);\n    cell.dataset.num = 0;\n  });\n\n  score = 0;\n\n  document.querySelector('.game-score').textContent = 0;\n\n  makeNewCell();\n  makeNewCell();\n}\n\nfunction handleInput(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      slideUp();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      break;\n\n    case 'ArrowLeft':\n      slideLeft();\n      break;\n  }\n\n  endMove();\n}\n\nfunction handleTouchStart(e) {\n  const firstTouch = e.touches[0];\n\n  xTouchStartPoint = firstTouch.clientX;\n  yToucStartPoint = firstTouch.clientY;\n}\n\nfunction handleTouchMove(e) {\n  if (!xTouchStartPoint || !yToucStartPoint) {\n    return;\n  }\n\n  const xTouchEndPoint = e.touches[0].clientX;\n  const yTouchEndPoint = e.touches[0].clientY;\n\n  const xDiff = xTouchEndPoint - xTouchStartPoint;\n  const yDiff = yTouchEndPoint - yToucStartPoint;\n\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\n    if (xDiff > 0) {\n      slideRight();\n    } else {\n      slideLeft();\n    }\n  } else {\n    if (yDiff > 0) {\n      slideDown();\n    } else {\n      slideUp();\n    }\n  }\n\n  xTouchStartPoint = null;\n  yToucStartPoint = null;\n\n  endMove();\n}\n\nfunction disableScrollReload(e) {\n  const lastS = document.documentElement.scrollTop;\n\n  if (lastS === 0 && (lastY - e.touches[0].clientY) < 0 && e.cancelable) {\n    e.preDefault();\n    e.stopPropagation();\n  }\n\n  lastY = e.touches[0].clientY;\n}\n\nbestBlock.textContent = best;\n\ninitTilesAndCells();\n\ndocument.querySelector('.button').addEventListener('click', handleButtonClick);\ndocument.addEventListener('keyup', handleInput);\ngameField.addEventListener('touchstart', handleTouchStart, false);\ngameField.addEventListener('touchmove', handleTouchMove, false);\ndocument.addEventListener('touchmove', disableScrollReload, { passive: false });\n"],"names":["$09e991522ca7e64e$var$gameField","document","querySelector","tBodies","$09e991522ca7e64e$var$rows","children","$09e991522ca7e64e$var$cells","querySelectorAll","$09e991522ca7e64e$var$scoreBlock","$09e991522ca7e64e$var$bestBlock","$09e991522ca7e64e$var$tiles","$09e991522ca7e64e$var$wasAnyCellReplaced","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$best","localStorage","getItem","$09e991522ca7e64e$var$xTouchStartPoint","$09e991522ca7e64e$var$yToucStartPoint","$09e991522ca7e64e$var$lastY","$09e991522ca7e64e$var$getCellsByRows","map","row","$09e991522ca7e64e$var$getEmptyCells","filter","cell","dataset","num","$09e991522ca7e64e$var$makeNewCell","emptyCell","$09e991522ca7e64e$var$getRandomEmptyCell","emptyCells","Math","floor","random","length","id","textContent","classList","add","setTimeout","remove","$09e991522ca7e64e$var$replaceEmptyCells","arrOfCells","isSorted","k","$09e991522ca7e64e$var$slide","groupedCells","i","cellsGroup","cellToRemove","cellToDouble","tileToRemove","tileToDouble","newNumber","forEach","style","top","offsetTop","left","offsetLeft","$09e991522ca7e64e$var$slideUp","$09e991522ca7e64e$var$getCellsByReversedColumns","columns","column","push","$09e991522ca7e64e$var$slideDown","$09e991522ca7e64e$var$getCellsByColumns","$09e991522ca7e64e$var$slideRight","$09e991522ca7e64e$var$slideLeft","reverse","$09e991522ca7e64e$var$endMove","setItem","$09e991522ca7e64e$var$isPossibleToMove","currentCellValue","$09e991522ca7e64e$var$initTilesAndCells","$09e991522ca7e64e$var$createTile","tile","createElement","append","addEventListener","e","target","key","firstTouch","touches","clientX","clientY","xTouchEndPoint","yTouchEndPoint","xDiff","yDiff","abs","documentElement","scrollTop","cancelable","preDefault","stopPropagation","passive"],"version":3,"file":"index.b49c419e.js.map"}